version: "2"
services:  
  web:
    build: ./services/web/nginx
    image: services/web/nginx
    ports:  
      - "80:80" 
    restart: always
#    volumes:
#      - ./app:/www/web
#      - ./services/web/nginx/conf:/etc/nginx
#      - ./services/web/nginx/logs:/www/web_logs
#      - ./services/web/nginx/index.html:/usr/share/nginx/html/
    networks:
        - code-network
#    depends_on:
#      - php
  mysql:  
    image: mysql:5.7 
    volumes:  
      - ./databases/mysql/data:/var/lib/mysql
      - ./databases/mysql/sample_db:/var/sample_db
      - ./databases/mysql/conf.d:/etc/mysql/conf.d
    ports:  
      - "3306:3306" 
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=yourmysqlpassword
    networks:
      - code-network
  gitlab:
    image: 'twang2218/gitlab-ce-zh:10.8.0'
    restart: always
    hostname: 'gitlab.example.com'
    environment:
      TZ: 'Asia/Shanghai'
      GITLAB_OMNIBUS_CONFIG: |
        external_url 'http://gitlab.example.com'
        gitlab_rails['time_zone'] = 'Asia/Shanghai'
#        GITLAB_HOST=127.0.0.1 # project path
#        GITLAB_PORT=10080 # http port
#        GITLAB_SSH_PORT=10183 # ssh port
#        GITLAB_RELATIVE_URL_ROOT=/gitlab
#        GITLAB_SECRETS_DB_KEY_BASE=long-and-random-alphanumeric-string
#        GITLAB_SECRETS_SECRET_KEY_BASE=long-and-random-alphanumeric-string
#        GITLAB_SECRETS_OTP_KEY_BASE=long-and-random-alphanumeric-string
        # 需要配置到 gitlab.rb 中的配置可以在这里配置，每个配置一行，注意缩进。
        # 比如下面的电子邮件的配置：
        # gitlab_rails['smtp_enable'] = true
        # gitlab_rails['smtp_address'] = "smtp.exmail.qq.com"
        # gitlab_rails['smtp_port'] = 465
        # gitlab_rails['smtp_user_name'] = "xxxx@xx.com"
        # gitlab_rails['smtp_password'] = "password"
        # gitlab_rails['smtp_authentication'] = "login"
        # gitlab_rails['smtp_enable_starttls_auto'] = true
        # gitlab_rails['smtp_tls'] = true
        # gitlab_rails['gitlab_email_from'] = 'xxxx@xx.com'
    ports:
      - '10080:80'
      - '443:443'
      - '22:22'
    volumes:
      - ./services/gitlab/data:/home/git/data:Z
      - ./services/gitlab/logs:/var/log/gitlab
  php:
    build: 
      context: ./services/php/docker/
    restart: always
    volumes:  
      - ./app:/www/web
      - ./services/php/etc/php7.1.13.ini:/usr/local/etc/php/conf.d/php7.1.13.ini
    depends_on:
      - mongodb
      - mysql
    networks:
        - code-network  
  mongodb:
    image: mongo:3.7.3
    restart: always
    environment:
      - MONGO_DATA_DIR=/data/db
      - MONGO_LOG_DIR=/data/logs
    volumes:
      - ./databases/mongodb/data:/data/db
      - ./databases/mongodb/sample_db:/data/sample_db
      - ./databases/mongodb/logs:/data/logs
      - ./databases/mongodb/etc/mongod.conf:/etc/mongod.conf
    ports:
      - 27017:27017
    networks:
      - code-network
  xunsearch:
    image: hightman/xunsearch:latest
    restart: always
    volumes:
      - ./databases/xunsearch/data:/usr/local/xunsearch/data
    networks:
      - code-network 
  redis:
    image: redis:4.0
    restart: always
    ports:
      - "6379:6379"
    environment:
        REDIS_PASS_FILE: /run/secrets/redis-password
    command: [
      "bash", "-c",
      '
       docker-entrypoint.sh
       --requirepass "$$(cat $$REDIS_PASS_FILE)"
      '
    ]
    volumes:
      - ./databases/redis/etc/redis.conf:/usr/local/etc/redis/redis.conf
      - ./databases/redis/data:/data
      - ./databases/redis/etc/redis-password:/run/secrets/redis-password
    networks:
      - code-network
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    links:
      - mysql
    ports:
      - "8081:80"
    environment:
      MYSQL_USERNAME: root
      MYSQL_ROOT_PASSWORD: yourmysqlpassword
      PMA_HOST: mysql
    networks:
      - code-network
  mailhog:
    hostname: localhost
    image: mailhog/mailhog:latest
    ports:
      - "8025:8025"
#  rockmongo:
#    image: jhaoheng/rockmongo
#    container_name: rockmongo
#    ports:
#      - "27018:80"
#    volumes:
#      - ./services/rockmongo/config.php:/app/config.php
#    networks:
#      - code-network
  ssh:
    build:
      context: ./services/ssh/docker/
    networks:
      - code-network
    ports:
      - "2222:22"
networks:
  code-network:
    driver: bridge